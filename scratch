{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EDA\n",
    "http://www.cs.cmu.edu/~ark/personas/"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:18.969189Z",
     "start_time": "2020-12-12T04:02:18.056402Z"
    }
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "%config InlineBackend.figure_format = 'retina'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:19.278003Z",
     "start_time": "2020-12-12T04:02:18.971027Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>freebase_id</th>\n",
       "      <th>name</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>runtime</th>\n",
       "      <th>languages</th>\n",
       "      <th>countries</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>975900</th>\n",
       "      <td>/m/03vyhn</td>\n",
       "      <td>Ghosts of Mars</td>\n",
       "      <td>2001-08-24</td>\n",
       "      <td>14010832.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>{\"/m/02h40lc\": \"English Language\"}</td>\n",
       "      <td>{\"/m/09c7w0\": \"United States of America\"}</td>\n",
       "      <td>{\"/m/01jfsb\": \"Thriller\", \"/m/06n90\": \"Science...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3196793</th>\n",
       "      <td>/m/08yl5d</td>\n",
       "      <td>Getting Away with Murder: The JonBenét Ramsey ...</td>\n",
       "      <td>2000-02-16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>95.0</td>\n",
       "      <td>{\"/m/02h40lc\": \"English Language\"}</td>\n",
       "      <td>{\"/m/09c7w0\": \"United States of America\"}</td>\n",
       "      <td>{\"/m/02n4kr\": \"Mystery\", \"/m/03bxz7\": \"Biograp...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28463795</th>\n",
       "      <td>/m/0crgdbh</td>\n",
       "      <td>Brun bitter</td>\n",
       "      <td>1988</td>\n",
       "      <td>NaN</td>\n",
       "      <td>83.0</td>\n",
       "      <td>{\"/m/05f_3\": \"Norwegian Language\"}</td>\n",
       "      <td>{\"/m/05b4w\": \"Norway\"}</td>\n",
       "      <td>{\"/m/0lsxr\": \"Crime Fiction\", \"/m/07s9rl0\": \"D...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9363483</th>\n",
       "      <td>/m/0285_cd</td>\n",
       "      <td>White Of The Eye</td>\n",
       "      <td>1987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>110.0</td>\n",
       "      <td>{\"/m/02h40lc\": \"English Language\"}</td>\n",
       "      <td>{\"/m/07ssc\": \"United Kingdom\"}</td>\n",
       "      <td>{\"/m/01jfsb\": \"Thriller\", \"/m/0glj9q\": \"Erotic...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>261236</th>\n",
       "      <td>/m/01mrr1</td>\n",
       "      <td>A Woman in Flames</td>\n",
       "      <td>1983</td>\n",
       "      <td>NaN</td>\n",
       "      <td>106.0</td>\n",
       "      <td>{\"/m/04306rv\": \"German Language\"}</td>\n",
       "      <td>{\"/m/0345h\": \"Germany\"}</td>\n",
       "      <td>{\"/m/07s9rl0\": \"Drama\"}</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         freebase_id                                               name  \\\n",
       "id                                                                        \n",
       "975900     /m/03vyhn                                     Ghosts of Mars   \n",
       "3196793    /m/08yl5d  Getting Away with Murder: The JonBenét Ramsey ...   \n",
       "28463795  /m/0crgdbh                                        Brun bitter   \n",
       "9363483   /m/0285_cd                                   White Of The Eye   \n",
       "261236     /m/01mrr1                                  A Woman in Flames   \n",
       "\n",
       "                date     revenue  runtime                           languages  \\\n",
       "id                                                                              \n",
       "975900    2001-08-24  14010832.0     98.0  {\"/m/02h40lc\": \"English Language\"}   \n",
       "3196793   2000-02-16         NaN     95.0  {\"/m/02h40lc\": \"English Language\"}   \n",
       "28463795        1988         NaN     83.0  {\"/m/05f_3\": \"Norwegian Language\"}   \n",
       "9363483         1987         NaN    110.0  {\"/m/02h40lc\": \"English Language\"}   \n",
       "261236          1983         NaN    106.0   {\"/m/04306rv\": \"German Language\"}   \n",
       "\n",
       "                                          countries  \\\n",
       "id                                                    \n",
       "975900    {\"/m/09c7w0\": \"United States of America\"}   \n",
       "3196793   {\"/m/09c7w0\": \"United States of America\"}   \n",
       "28463795                     {\"/m/05b4w\": \"Norway\"}   \n",
       "9363483              {\"/m/07ssc\": \"United Kingdom\"}   \n",
       "261236                      {\"/m/0345h\": \"Germany\"}   \n",
       "\n",
       "                                                     genres  \n",
       "id                                                           \n",
       "975900    {\"/m/01jfsb\": \"Thriller\", \"/m/06n90\": \"Science...  \n",
       "3196793   {\"/m/02n4kr\": \"Mystery\", \"/m/03bxz7\": \"Biograp...  \n",
       "28463795  {\"/m/0lsxr\": \"Crime Fiction\", \"/m/07s9rl0\": \"D...  \n",
       "9363483   {\"/m/01jfsb\": \"Thriller\", \"/m/0glj9q\": \"Erotic...  \n",
       "261236                              {\"/m/07s9rl0\": \"Drama\"}  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "movies = pd.read_csv(\n",
    "    'MovieSummaries/movie.metadata.tsv',\n",
    "    delimiter='\\t',\n",
    "    header=None,\n",
    "    index_col='id',\n",
    "    names='id freebase_id name date revenue runtime languages countries genres'.split()\n",
    ")\n",
    "movies.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:19.994564Z",
     "start_time": "2020-12-12T04:02:19.289417Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>summary</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>23890098</th>\n",
       "      <td>Shlykov, a hard-working taxi driver and Lyosha...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31186339</th>\n",
       "      <td>The nation of Panem consists of a wealthy Capi...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20663735</th>\n",
       "      <td>Poovalli Induchoodan  is sentenced for six yea...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2231378</th>\n",
       "      <td>The Lemon Drop Kid , a New York City swindler,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595909</th>\n",
       "      <td>Seventh-day Adventist Church pastor Michael Ch...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    summary\n",
       "id                                                         \n",
       "23890098  Shlykov, a hard-working taxi driver and Lyosha...\n",
       "31186339  The nation of Panem consists of a wealthy Capi...\n",
       "20663735  Poovalli Induchoodan  is sentenced for six yea...\n",
       "2231378   The Lemon Drop Kid , a New York City swindler,...\n",
       "595909    Seventh-day Adventist Church pastor Michael Ch..."
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plots = pd.read_csv(\n",
    "    'MovieSummaries/plot_summaries.txt',\n",
    "    delimiter='\\t',\n",
    "    header=None,\n",
    "    index_col='id',\n",
    "    names='id summary'.split())\n",
    "plots.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:20.999025Z",
     "start_time": "2020-12-12T04:02:19.999529Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>summary</th>\n",
       "      <th>name</th>\n",
       "      <th>year</th>\n",
       "      <th>genres</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>23890098</th>\n",
       "      <td>Shlykov, a hard-working taxi driver and Lyosha...</td>\n",
       "      <td>Taxi Blues</td>\n",
       "      <td>1990</td>\n",
       "      <td>[Drama, World cinema]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31186339</th>\n",
       "      <td>The nation of Panem consists of a wealthy Capi...</td>\n",
       "      <td>The Hunger Games</td>\n",
       "      <td>2012</td>\n",
       "      <td>[Action/Adventure, Science Fiction, Action, Dr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20663735</th>\n",
       "      <td>Poovalli Induchoodan  is sentenced for six yea...</td>\n",
       "      <td>Narasimham</td>\n",
       "      <td>2000</td>\n",
       "      <td>[Musical, Action, Drama, Bollywood]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2231378</th>\n",
       "      <td>The Lemon Drop Kid , a New York City swindler,...</td>\n",
       "      <td>The Lemon Drop Kid</td>\n",
       "      <td>1951</td>\n",
       "      <td>[Screwball comedy, Comedy]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>595909</th>\n",
       "      <td>Seventh-day Adventist Church pastor Michael Ch...</td>\n",
       "      <td>A Cry in the Dark</td>\n",
       "      <td>1988</td>\n",
       "      <td>[Crime Fiction, Drama, Docudrama, World cinema...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    summary  \\\n",
       "id                                                            \n",
       "23890098  Shlykov, a hard-working taxi driver and Lyosha...   \n",
       "31186339  The nation of Panem consists of a wealthy Capi...   \n",
       "20663735  Poovalli Induchoodan  is sentenced for six yea...   \n",
       "2231378   The Lemon Drop Kid , a New York City swindler,...   \n",
       "595909    Seventh-day Adventist Church pastor Michael Ch...   \n",
       "\n",
       "                        name  year  \\\n",
       "id                                   \n",
       "23890098          Taxi Blues  1990   \n",
       "31186339    The Hunger Games  2012   \n",
       "20663735          Narasimham  2000   \n",
       "2231378   The Lemon Drop Kid  1951   \n",
       "595909     A Cry in the Dark  1988   \n",
       "\n",
       "                                                     genres  \n",
       "id                                                           \n",
       "23890098                              [Drama, World cinema]  \n",
       "31186339  [Action/Adventure, Science Fiction, Action, Dr...  \n",
       "20663735                [Musical, Action, Drama, Bollywood]  \n",
       "2231378                          [Screwball comedy, Comedy]  \n",
       "595909    [Crime Fiction, Drama, Docudrama, World cinema...  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = (\n",
    "    plots\n",
    "    .merge(movies, on='id')\n",
    "    .assign(\n",
    "        year=lambda x: pd.to_datetime(x.date, errors='coerce').dt.year.astype('Int64'),\n",
    "        genres=lambda x: x.genres.apply(lambda x: list(eval(x).values()))\n",
    "    )['summary name year genres'.split()]\n",
    ")\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:21.035728Z",
     "start_time": "2020-12-12T04:02:21.008284Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "len(movies)    81741\n",
       "len(plots)     42303\n",
       "len(df)        42204\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.Series({'len(movies)': len(movies), 'len(plots)': len(plots), 'len(df)': len(df)})\n",
    "# (Some movies do not have corresponding plots in the dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:21.053249Z",
     "start_time": "2020-12-12T04:02:21.047592Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Debbie\\'s favorite band is Dream Street, and her favorite member is Chris Trousdale. When Chris gets a fever while travelling on the Dream Street tour, in a haze, he strays away and ends up in Debbie\\'s bed, much to the shock of his \"Biggest Fan,\" who thinks she\\'s in heaven. Debbie proposes that Chris stay with her and he agrees. So, over the week they spend time together and she secretly hides him so he can escape the pressures of being a pop star for a little while. Chris even attends high school with Debbie, while disguised as a nerd. Meanwhile, the band\\'s managers are going crazy at the loss of the star, thinking he has been kidnapped. At the end of the week Debbie and Chris  go to her high school prom where two jealous popular girls figure out Chris\\'s true identity and tell the police about Chris\\'s whereabouts, splitting him and Debbie up. They are eventually reunited on stage at a concert, ending in a sweet, final kiss and a performance by Dream Street.'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.summary.iloc[17]  # Example plot summary (medium length)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:02:24.444730Z",
     "start_time": "2020-12-12T04:02:21.063337Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 238,
       "width": 787
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(13, 3))\n",
    "df.year.value_counts().sort_index().plot.bar(ax=ax)\n",
    "for label in ax.xaxis.get_ticklabels()[::2]:\n",
    "    label.set_visible(False)\n",
    "ax.set(title='# Movies in Dataset', xlabel='Year', ylabel='# Movies');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:09:09.152760Z",
     "start_time": "2020-12-12T04:02:24.447457Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[32m===Compilation===\u001b[m\n",
      "\u001b[32m===Tokenization===\u001b[m\n",
      "Current step: Tokenizing input file...\u001b[0K\n",
      "real\t0m35.825s\n",
      "user\t0m36.392s\n",
      "sys\t0m1.814s\n",
      "Detected Language: EN\u001b[0K\n",
      "Current step: Tokenizing wikipedia phrases...\u001b[0K\n",
      "No provided expert labels.\u001b[0K\n",
      "\u001b[32m===Part-Of-Speech Tagging===\u001b[m\n",
      "Current step: Merging...\u001b[0Ks...\u001b[0K\n",
      "\u001b[32m===AutoPhrasing===\u001b[m\n",
      "=== Current Settings ===\n",
      "Iterations = 2\n",
      "Minimum Support Threshold = 10\n",
      "Maximum Length Threshold = 6\n",
      "POS-Tagging Mode Enabled\n",
      "Number of threads = 1\n",
      "Labeling Method = DPDN\n",
      "\tAuto labels from knowledge bases\n",
      "\tMax Positive Samples = -1\n",
      "=======\n",
      "Loading data...\n",
      "# of total tokens = 14911075\n",
      "max word token id = 172301\n",
      "# of documents = 42207\n",
      "# of distinct POS tags = 57\n",
      "Mining frequent phrases...\n",
      "selected MAGIC = 172307\n",
      "# of frequent phrases = 279214\n",
      "Extracting features...\n",
      "Constructing label pools...\n",
      "\tThe size of the positive pool = 23572\n",
      "\tThe size of the negative pool = 253185\n",
      "# truth patterns = 209510\n",
      "Estimating Phrase Quality...\n",
      "Segmenting...\n",
      "Rectifying features...\n",
      "Estimating Phrase Quality...\n",
      "Segmenting...\n",
      "Dumping results...\n",
      "Done.\n",
      "\n",
      "real\t3m45.037s\n",
      "user\t3m26.408s\n",
      "sys\t0m2.890s\n",
      "\u001b[32m===Saving Model and Results===\u001b[m\n",
      "\u001b[32m===Generating Output===\u001b[m\n"
     ]
    }
   ],
   "source": [
    "with open(f'movies.txt', 'w') as f:\n",
    "    f.writelines([f'{movie}\\n' for movie in df.summary])\n",
    "!cd AutoPhrase && MODEL=../models/movies RAW_TRAIN=../movies.txt THREAD=1 ./auto_phrase.sh"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:09:09.240121Z",
     "start_time": "2020-12-12T04:09:09.154957Z"
    }
   },
   "outputs": [],
   "source": [
    "single, multi = [pd.read_csv(f'models/movies/{fp}', header=None, index_col=1, sep='\\t', squeeze=True)\n",
    "                 for fp in ('AutoPhrase_single-word.txt', 'AutoPhrase_multi-words.txt')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:09:09.424253Z",
     "start_time": "2020-12-12T04:09:09.242405Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 222,
       "width": 322
      },
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(5, 3))\n",
    "ax.hist([single, multi], density=True, label=['Single-Word Phrases', 'Multi-Word Phrases'])\n",
    "ax.set(title='AutoPhrase Phrase Quality', xlabel='Quality Score', ylabel='Density')\n",
    "ax.legend(loc='upper right');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2020-12-12T04:09:09.635419Z",
     "start_time": "2020-12-12T04:09:09.426788Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Single-Word Phrase</th>\n",
       "      <th>Multi-Word Phrase</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Score</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1.00</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.99</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.98</th>\n",
       "      <td></td>\n",
       "      <td>looney tunes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.97</th>\n",
       "      <td></td>\n",
       "      <td>roller coaster</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.96</th>\n",
       "      <td></td>\n",
       "      <td>district attorney</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.95</th>\n",
       "      <td></td>\n",
       "      <td>musa bhai</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.94</th>\n",
       "      <td></td>\n",
       "      <td>silver spear</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.93</th>\n",
       "      <td></td>\n",
       "      <td>sound effects</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.92</th>\n",
       "      <td></td>\n",
       "      <td>baron von</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.91</th>\n",
       "      <td></td>\n",
       "      <td>white castle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.90</th>\n",
       "      <td></td>\n",
       "      <td>army base</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.89</th>\n",
       "      <td></td>\n",
       "      <td>smoke signals</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.88</th>\n",
       "      <td></td>\n",
       "      <td>union soldiers</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.87</th>\n",
       "      <td></td>\n",
       "      <td>anti tank</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.86</th>\n",
       "      <td></td>\n",
       "      <td>vast fortune</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.85</th>\n",
       "      <td></td>\n",
       "      <td>stage actor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.84</th>\n",
       "      <td></td>\n",
       "      <td>medical student</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.83</th>\n",
       "      <td></td>\n",
       "      <td>cite web cite web cite web</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.82</th>\n",
       "      <td></td>\n",
       "      <td>television series</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.81</th>\n",
       "      <td></td>\n",
       "      <td>key role</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.80</th>\n",
       "      <td>maa</td>\n",
       "      <td>football field</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.79</th>\n",
       "      <td>dickens</td>\n",
       "      <td>team leader</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.78</th>\n",
       "      <td>sesame</td>\n",
       "      <td>trouble adjusting</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.77</th>\n",
       "      <td>hush</td>\n",
       "      <td>desert town</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.76</th>\n",
       "      <td>trooper</td>\n",
       "      <td>bribe money</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.75</th>\n",
       "      <td>gypsy</td>\n",
       "      <td>jay and silent bob</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.74</th>\n",
       "      <td>governor's</td>\n",
       "      <td>word reaches</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.73</th>\n",
       "      <td>bison</td>\n",
       "      <td>interrogation room</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.72</th>\n",
       "      <td>desi</td>\n",
       "      <td>mind reading</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.71</th>\n",
       "      <td>rebel</td>\n",
       "      <td>pretty girl</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.70</th>\n",
       "      <td>fbi</td>\n",
       "      <td>rocket car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.69</th>\n",
       "      <td>mine</td>\n",
       "      <td>devotee of lord</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.68</th>\n",
       "      <td>saunders</td>\n",
       "      <td>government forces</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.67</th>\n",
       "      <td>slick</td>\n",
       "      <td>search leads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.66</th>\n",
       "      <td>lourdes</td>\n",
       "      <td>hired hand</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.65</th>\n",
       "      <td>laws</td>\n",
       "      <td>millionaire named</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.64</th>\n",
       "      <td>waters</td>\n",
       "      <td>letter of recommendation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.63</th>\n",
       "      <td>passerby</td>\n",
       "      <td>loyal friend</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.62</th>\n",
       "      <td>morphs</td>\n",
       "      <td>set of playing cards</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.61</th>\n",
       "      <td>basketball</td>\n",
       "      <td>party celebrating</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.60</th>\n",
       "      <td>catalyst</td>\n",
       "      <td>car driver</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.59</th>\n",
       "      <td>elderly</td>\n",
       "      <td>9 1 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.58</th>\n",
       "      <td>testifying</td>\n",
       "      <td>de silva</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.57</th>\n",
       "      <td>removing</td>\n",
       "      <td>hand to mouth</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.56</th>\n",
       "      <td>hitman</td>\n",
       "      <td>quickly flees</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.55</th>\n",
       "      <td>recommendation</td>\n",
       "      <td>minutes left</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.54</th>\n",
       "      <td>jams</td>\n",
       "      <td>close relationship</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.53</th>\n",
       "      <td>maimed</td>\n",
       "      <td>ill gotten gains</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.52</th>\n",
       "      <td>hostage</td>\n",
       "      <td>ventilation system</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.51</th>\n",
       "      <td>truly</td>\n",
       "      <td>elf named</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.50</th>\n",
       "      <td>pranks</td>\n",
       "      <td>mayor's daughter</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.49</th>\n",
       "      <td>behaviour</td>\n",
       "      <td>eventually gains</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.48</th>\n",
       "      <td>wins</td>\n",
       "      <td>leave immediately</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.47</th>\n",
       "      <td>felt</td>\n",
       "      <td>reluctantly decides</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.46</th>\n",
       "      <td>bitterness</td>\n",
       "      <td>car and drive</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.45</th>\n",
       "      <td>bk</td>\n",
       "      <td>far east</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.44</th>\n",
       "      <td>intercepts</td>\n",
       "      <td>sentenced to jail</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.43</th>\n",
       "      <td>treats</td>\n",
       "      <td>a wide range</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.42</th>\n",
       "      <td>should</td>\n",
       "      <td>arrives and confronts</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.41</th>\n",
       "      <td>must</td>\n",
       "      <td>small army</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.40</th>\n",
       "      <td>506</td>\n",
       "      <td>top cat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.39</th>\n",
       "      <td></td>\n",
       "      <td>brother died</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.38</th>\n",
       "      <td></td>\n",
       "      <td>threatens to report</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.37</th>\n",
       "      <td></td>\n",
       "      <td>a shootout occurs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.36</th>\n",
       "      <td></td>\n",
       "      <td>promising to return</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.35</th>\n",
       "      <td></td>\n",
       "      <td>eventually kills</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.34</th>\n",
       "      <td></td>\n",
       "      <td>wrongfully accused of</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.33</th>\n",
       "      <td></td>\n",
       "      <td>the golden fleece</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.32</th>\n",
       "      <td></td>\n",
       "      <td>attempt to kidnap</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.31</th>\n",
       "      <td></td>\n",
       "      <td>hell bent</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.30</th>\n",
       "      <td></td>\n",
       "      <td>40 years</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.29</th>\n",
       "      <td></td>\n",
       "      <td>depictions of</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.28</th>\n",
       "      <td></td>\n",
       "      <td>anna returns</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.27</th>\n",
       "      <td></td>\n",
       "      <td>ask forgiveness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.26</th>\n",
       "      <td></td>\n",
       "      <td>an upstairs window</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.25</th>\n",
       "      <td></td>\n",
       "      <td>attempt to bring</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.24</th>\n",
       "      <td></td>\n",
       "      <td>a male heir</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.23</th>\n",
       "      <td></td>\n",
       "      <td>father makes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.22</th>\n",
       "      <td></td>\n",
       "      <td>film shoot</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.21</th>\n",
       "      <td></td>\n",
       "      <td>31 |</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.20</th>\n",
       "      <td></td>\n",
       "      <td>a great white shark</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.19</th>\n",
       "      <td></td>\n",
       "      <td>dozens of</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.18</th>\n",
       "      <td></td>\n",
       "      <td>a drug dealer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.17</th>\n",
       "      <td></td>\n",
       "      <td>the red light</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.16</th>\n",
       "      <td></td>\n",
       "      <td>refer to</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.15</th>\n",
       "      <td></td>\n",
       "      <td>a series of vignettes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.14</th>\n",
       "      <td></td>\n",
       "      <td>the forty thieves</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.13</th>\n",
       "      <td></td>\n",
       "      <td>mortally wounded in</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.12</th>\n",
       "      <td></td>\n",
       "      <td>a dance contest</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.11</th>\n",
       "      <td></td>\n",
       "      <td>a drunken night</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.10</th>\n",
       "      <td></td>\n",
       "      <td>a character named</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.09</th>\n",
       "      <td></td>\n",
       "      <td>best known</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.08</th>\n",
       "      <td></td>\n",
       "      <td>things right</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.07</th>\n",
       "      <td></td>\n",
       "      <td>replica of</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.06</th>\n",
       "      <td></td>\n",
       "      <td>an athlete</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.05</th>\n",
       "      <td></td>\n",
       "      <td>own songs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.04</th>\n",
       "      <td></td>\n",
       "      <td>acceptance of</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.03</th>\n",
       "      <td></td>\n",
       "      <td>tries to destroy</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.02</th>\n",
       "      <td></td>\n",
       "      <td>try again</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.01</th>\n",
       "      <td></td>\n",
       "      <td>the war on</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0.00</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Single-Word Phrase           Multi-Word Phrase\n",
       "Score                                               \n",
       "1.00                                                \n",
       "0.99                                                \n",
       "0.98                                    looney tunes\n",
       "0.97                                  roller coaster\n",
       "0.96                               district attorney\n",
       "0.95                                       musa bhai\n",
       "0.94                                    silver spear\n",
       "0.93                                   sound effects\n",
       "0.92                                       baron von\n",
       "0.91                                    white castle\n",
       "0.90                                       army base\n",
       "0.89                                   smoke signals\n",
       "0.88                                  union soldiers\n",
       "0.87                                       anti tank\n",
       "0.86                                    vast fortune\n",
       "0.85                                     stage actor\n",
       "0.84                                 medical student\n",
       "0.83                      cite web cite web cite web\n",
       "0.82                               television series\n",
       "0.81                                        key role\n",
       "0.80                 maa              football field\n",
       "0.79             dickens                 team leader\n",
       "0.78              sesame           trouble adjusting\n",
       "0.77                hush                 desert town\n",
       "0.76             trooper                 bribe money\n",
       "0.75               gypsy          jay and silent bob\n",
       "0.74          governor's                word reaches\n",
       "0.73               bison          interrogation room\n",
       "0.72                desi                mind reading\n",
       "0.71               rebel                 pretty girl\n",
       "0.70                 fbi                  rocket car\n",
       "0.69                mine             devotee of lord\n",
       "0.68            saunders           government forces\n",
       "0.67               slick                search leads\n",
       "0.66             lourdes                  hired hand\n",
       "0.65                laws           millionaire named\n",
       "0.64              waters    letter of recommendation\n",
       "0.63            passerby                loyal friend\n",
       "0.62              morphs        set of playing cards\n",
       "0.61          basketball           party celebrating\n",
       "0.60            catalyst                  car driver\n",
       "0.59             elderly                       9 1 1\n",
       "0.58          testifying                    de silva\n",
       "0.57            removing               hand to mouth\n",
       "0.56              hitman               quickly flees\n",
       "0.55      recommendation                minutes left\n",
       "0.54                jams          close relationship\n",
       "0.53              maimed            ill gotten gains\n",
       "0.52             hostage          ventilation system\n",
       "0.51               truly                   elf named\n",
       "0.50              pranks            mayor's daughter\n",
       "0.49           behaviour            eventually gains\n",
       "0.48                wins           leave immediately\n",
       "0.47                felt         reluctantly decides\n",
       "0.46          bitterness               car and drive\n",
       "0.45                  bk                    far east\n",
       "0.44          intercepts           sentenced to jail\n",
       "0.43              treats                a wide range\n",
       "0.42              should       arrives and confronts\n",
       "0.41                must                  small army\n",
       "0.40                 506                     top cat\n",
       "0.39                                    brother died\n",
       "0.38                             threatens to report\n",
       "0.37                               a shootout occurs\n",
       "0.36                             promising to return\n",
       "0.35                                eventually kills\n",
       "0.34                           wrongfully accused of\n",
       "0.33                               the golden fleece\n",
       "0.32                               attempt to kidnap\n",
       "0.31                                       hell bent\n",
       "0.30                                        40 years\n",
       "0.29                                   depictions of\n",
       "0.28                                    anna returns\n",
       "0.27                                 ask forgiveness\n",
       "0.26                              an upstairs window\n",
       "0.25                                attempt to bring\n",
       "0.24                                     a male heir\n",
       "0.23                                    father makes\n",
       "0.22                                      film shoot\n",
       "0.21                                            31 |\n",
       "0.20                             a great white shark\n",
       "0.19                                       dozens of\n",
       "0.18                                   a drug dealer\n",
       "0.17                                   the red light\n",
       "0.16                                        refer to\n",
       "0.15                           a series of vignettes\n",
       "0.14                               the forty thieves\n",
       "0.13                             mortally wounded in\n",
       "0.12                                 a dance contest\n",
       "0.11                                 a drunken night\n",
       "0.10                               a character named\n",
       "0.09                                      best known\n",
       "0.08                                    things right\n",
       "0.07                                      replica of\n",
       "0.06                                      an athlete\n",
       "0.05                                       own songs\n",
       "0.04                                   acceptance of\n",
       "0.03                                tries to destroy\n",
       "0.02                                       try again\n",
       "0.01                                      the war on\n",
       "0.00                                                "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "single_examples, multi_examples, scores = [], [], []\n",
    "for score in np.linspace(1, 0, 101):\n",
    "    single_examples.append('' if (single - score).abs().min() > .01/2 else (single - score).abs().idxmin())\n",
    "    multi_examples.append('' if (multi - score).abs().min() > .01/2 else (multi - score).abs().idxmin())\n",
    "    scores.append(score)\n",
    "\n",
    "with pd.option_context('display.max_rows', None):\n",
    "    display(pd.DataFrame({\n",
    "        'Score': scores,\n",
    "        'Single-Word Phrase': single_examples,\n",
    "        'Multi-Word Phrase': multi_examples\n",
    "    }).set_index('Score'))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
